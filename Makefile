#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.133                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS =  -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG =  $(INC) -I/usr/include/mongo
CFLAGS_DEBUG =  $(CFLAGS) -g
RESINC_DEBUG =  $(RESINC)
RCFLAGS_DEBUG =  $(RCFLAGS)
LIBDIR_DEBUG =  $(LIBDIR)
LIB_DEBUG = $(LIB) /usr/lib/libgloox.so /usr/lib/libpthread.so /usr/lib/libmongoclient.so
LDFLAGS_DEBUG =  $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/zabbix_xmpp

INC_RELEASE =  $(INC) -I/usr/include/mongo/
CFLAGS_RELEASE =  $(CFLAGS) -O2
RESINC_RELEASE =  $(RESINC)
RCFLAGS_RELEASE =  $(RCFLAGS)
LIBDIR_RELEASE =  $(LIBDIR)
LIB_RELEASE = $(LIB) /usr/lib/libgloox.so /usr/lib/libpthread.so /usr/lib/libmongoclient.so
LDFLAGS_RELEASE =  $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/zabbix_xmpp

OBJ_DEBUG = $(OBJDIR_DEBUG)/Help.o $(OBJDIR_DEBUG)/main.o $(OBJDIR_DEBUG)/Show.o $(OBJDIR_DEBUG)/Report.o $(OBJDIR_DEBUG)/Observer.o $(OBJDIR_DEBUG)/Learn.o $(OBJDIR_DEBUG)/Janitor.o $(OBJDIR_DEBUG)/Bot.o $(OBJDIR_DEBUG)/Forget.o $(OBJDIR_DEBUG)/Execute.o $(OBJDIR_DEBUG)/ConfigParser.o $(OBJDIR_DEBUG)/Commands.o $(OBJDIR_DEBUG)/CommandHandler.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/Help.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/Show.o $(OBJDIR_RELEASE)/Report.o $(OBJDIR_RELEASE)/Observer.o $(OBJDIR_RELEASE)/Learn.o $(OBJDIR_RELEASE)/Janitor.o $(OBJDIR_RELEASE)/Bot.o $(OBJDIR_RELEASE)/Forget.o $(OBJDIR_RELEASE)/Execute.o $(OBJDIR_RELEASE)/ConfigParser.o $(OBJDIR_RELEASE)/Commands.o $(OBJDIR_RELEASE)/CommandHandler.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LDFLAGS_DEBUG) $(LIBDIR_DEBUG) $(OBJ_DEBUG) $(LIB_DEBUG) -o $(OUT_DEBUG)

$(OBJDIR_DEBUG)/Help.o: Help.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Help.cpp -o $(OBJDIR_DEBUG)/Help.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

$(OBJDIR_DEBUG)/Show.o: Show.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Show.cpp -o $(OBJDIR_DEBUG)/Show.o

$(OBJDIR_DEBUG)/Report.o: Report.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Report.cpp -o $(OBJDIR_DEBUG)/Report.o

$(OBJDIR_DEBUG)/Observer.o: Observer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Observer.cpp -o $(OBJDIR_DEBUG)/Observer.o

$(OBJDIR_DEBUG)/Learn.o: Learn.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Learn.cpp -o $(OBJDIR_DEBUG)/Learn.o

$(OBJDIR_DEBUG)/Janitor.o: Janitor.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Janitor.cpp -o $(OBJDIR_DEBUG)/Janitor.o

$(OBJDIR_DEBUG)/Bot.o: Bot.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Bot.cpp -o $(OBJDIR_DEBUG)/Bot.o

$(OBJDIR_DEBUG)/Forget.o: Forget.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Forget.cpp -o $(OBJDIR_DEBUG)/Forget.o

$(OBJDIR_DEBUG)/Execute.o: Execute.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Execute.cpp -o $(OBJDIR_DEBUG)/Execute.o

$(OBJDIR_DEBUG)/ConfigParser.o: ConfigParser.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ConfigParser.cpp -o $(OBJDIR_DEBUG)/ConfigParser.o

$(OBJDIR_DEBUG)/Commands.o: Commands.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c Commands.cpp -o $(OBJDIR_DEBUG)/Commands.o

$(OBJDIR_DEBUG)/CommandHandler.o: CommandHandler.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c CommandHandler.cpp -o $(OBJDIR_DEBUG)/CommandHandler.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LDFLAGS_RELEASE) $(LIBDIR_RELEASE) $(OBJ_RELEASE) $(LIB_RELEASE) -o $(OUT_RELEASE)

$(OBJDIR_RELEASE)/Help.o: Help.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Help.cpp -o $(OBJDIR_RELEASE)/Help.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/Show.o: Show.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Show.cpp -o $(OBJDIR_RELEASE)/Show.o

$(OBJDIR_RELEASE)/Report.o: Report.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Report.cpp -o $(OBJDIR_RELEASE)/Report.o

$(OBJDIR_RELEASE)/Observer.o: Observer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Observer.cpp -o $(OBJDIR_RELEASE)/Observer.o

$(OBJDIR_RELEASE)/Learn.o: Learn.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Learn.cpp -o $(OBJDIR_RELEASE)/Learn.o

$(OBJDIR_RELEASE)/Janitor.o: Janitor.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Janitor.cpp -o $(OBJDIR_RELEASE)/Janitor.o

$(OBJDIR_RELEASE)/Bot.o: Bot.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Bot.cpp -o $(OBJDIR_RELEASE)/Bot.o

$(OBJDIR_RELEASE)/Forget.o: Forget.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Forget.cpp -o $(OBJDIR_RELEASE)/Forget.o

$(OBJDIR_RELEASE)/Execute.o: Execute.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Execute.cpp -o $(OBJDIR_RELEASE)/Execute.o

$(OBJDIR_RELEASE)/ConfigParser.o: ConfigParser.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ConfigParser.cpp -o $(OBJDIR_RELEASE)/ConfigParser.o

$(OBJDIR_RELEASE)/Commands.o: Commands.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c Commands.cpp -o $(OBJDIR_RELEASE)/Commands.o

$(OBJDIR_RELEASE)/CommandHandler.o: CommandHandler.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c CommandHandler.cpp -o $(OBJDIR_RELEASE)/CommandHandler.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

